{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Creaci\u00f3n de un sitio web con Mkdocs","text":""},{"location":"#introduccio-a-mkdocs","title":"Introducci\u00f3 a MkDocs","text":"<p>MkDocs \u00e9s un generador de llocs web est\u00e0tics dissenyat per crear documentaci\u00f3 de projectes de manera senzilla i eficient. Utilitza el llenguatge de marcat lleuger Markdown per escriure el contingut i YAML per configurar el lloc.</p>"},{"location":"#per-a-que-sutilitza","title":"Per a qu\u00e8 s'utilitza?","text":"<p>MkDocs s'utilitza principalment per:</p> <ul> <li>Crear documentaci\u00f3 t\u00e8cnica per a projectes de programari, manuals o tutorials,</li> <li>Generar llocs web est\u00e0tics que poden ser allotjats f\u00e0cilment en serveis com GitHub Pages.  </li> <li>Facilitar la col\u00b7laboraci\u00f3 en projectes mitjan\u00e7ant una estructura de documentaci\u00f3 clara i ben organitzada.  </li> </ul> <p>Al nostre cas, realitzarem un blog t\u00e8cnic, on anirem documentant el que anem aprenent als m\u00f2duls d'Entorns de Desevolupament i Llenguatges de Marques, i que pot acabar convertint-se en els nostres propis apunts del m\u00f2dul.</p>"},{"location":"EDD/act_1/","title":"Los 5 lenguajes m\u00e1s utilizados en la actualidad","text":"<p> Enlace a la web</p>"},{"location":"EDD/act_1/#1r-python","title":"1r. Python","text":"Nivel de abstracci\u00f3n Alto Prop\u00f3sito General Compilado / Interpretado Interpretado Paradigmas de programaci\u00f3n Estructurada"},{"location":"EDD/act_1/#2n-c","title":"2n. C++","text":"Nivel de abstracci\u00f3n Intermedio Prop\u00f3sito General Compilado / Interpretado Compilado Paradigmas de programaci\u00f3n Orientada a objetos ---"},{"location":"EDD/act_1/#3r-java","title":"3r. Java","text":"Nivel de abstracci\u00f3n Alto Prop\u00f3sito General Compilado / Interpretado Interpretado y compilado Paradigmas de programaci\u00f3n Orientada a objetos ---"},{"location":"EDD/act_1/#4t-c","title":"4t. C","text":"Nivel de abstracci\u00f3n Intermedio Prop\u00f3sito General Compilado / Interpretado Compilado Paradigmas de programaci\u00f3n Procedimental ---"},{"location":"EDD/act_1/#5t-c","title":"5t. C<code>#</code>","text":"Nivel de abstracci\u00f3n Intermedio Prop\u00f3sito General Compilado / Interpretado Compilado Paradigmas de programaci\u00f3n Orientada a objetos"},{"location":"EDD/act_2/","title":"Planteamiento de desarrollo de apps","text":"<ol> <li>Tener la idea / Estudiar el mercado. Por ej. Un juego de zombies mundo abierto.</li> <li>Coger inspiraciones de la competencia.</li> <li>Planificar / Terminar de pensar la idea.</li> <li>Decidir la herramientas de desarrollo, en este caso unity por lo que utilizaremos C++.</li> <li>Hacer una peque\u00f1a demo con las mecanicas basicas.</li> <li>Hacer un plan de marketing para dar a conocer el juego y generar expectacion.</li> <li>Realizar los dise\u00f1os del mundo, de los modelos, y de la base de datos.</li> <li>Desarrollar el juego. (Las colosiones, los movimientos, las fisicas, etc)</li> <li>Publicar el juego y realizar otro plan de marketing.</li> <li>Realizar mantenimiento del juego implantando actualizaciones con mas contenido y correcci\u00f3n de errores.</li> </ol>"},{"location":"EDD/act_3/","title":"Ejemplos de traducci\u00f3n","text":"<p>Quines conclussions extreus dels exemples anteriors? Per a qu\u00e8 serveix l'ordre python3? I cc? I java i javac?</p>"},{"location":"EDD/act_3/#conclusion","title":"Conclusi\u00f3n","text":"<p>Los lenguajes compilados generan un archivo para ejecutarlos, mientras que los interpretados no.</p>"},{"location":"EDD/act_3/#comandos","title":"Comandos","text":"<p><code>python3</code> </p> <p>Lanza el interprete de python e interpreta el fichero.</p> <p><code>cc</code> </p> <p>Genera un archivo ejecutable.</p> <p><code>java</code> </p> <p>Lanza el interprete de java para ejecutar el fichero generado.</p> <p><code>javac</code> </p> <p>Genera un fichero que podr\u00e1 interpretar el interprete de java.</p>"},{"location":"EDD/act_4/","title":"Efecto bola de nieve","text":""},{"location":"EDD/act_4/#el-problema","title":"El problema","text":"<p>El problema ha sido que el cliente deber\u00eda haber visto un prototipo mucho antes de ver el producto final. Todo esto para que el cliente corrigiera la direcci\u00f3n de debian de llevar los desarrolladores.</p>"},{"location":"EDD/act_4/#la-solucion","title":"La soluci\u00f3n","text":"<p>Una posible solucion podria haber sido utilizar otro modelo de desarrollo de aplicaciones, como por ejemplo el modelo de construcci\u00f3n de prototipos. Con este modelo el cliente podr\u00eda haber visto un primer prototipo y luego podr\u00eda haber ido viendo como iba avanzando este para ir corrigiendo.</p>"},{"location":"EDD/act_5/","title":"La web de la empresa","text":""},{"location":"EDD/act_5/#fases","title":"Fases","text":"<ul> <li>An\u00e1lisis = conseguir la informaci\u00f3n necesaria sobre los diferentes departamentos.</li> <li>Dise\u00f1o = dise\u00f1ar la estructura de la p\u00e1gina web.</li> <li>Implementaci\u00f3n = pasar el dise\u00f1o a codigo.</li> <li>Implantaci\u00f3n = realizar una parte de la pagina web.</li> <li>Evaluaci\u00f3n = evaluar si su funcionamiento es correcto.</li> </ul>"},{"location":"EDD/act_5/#modelo","title":"Modelo","text":"<p>El modelo ser\u00eda en espiral, ya que en este despues de un avance se evalua para ver si es correcto y se puede seguir avanzando o es necesario corregir algo.</p>"},{"location":"EDD/act_5/#scrum","title":"Scrum","text":"<p>Aplicando el Scrum a la planificaci\u00f3n, lo que har\u00eda seria realizar un scrum diario y un sprint planning al principio de cada sprint. Cada sprint seria el inicio de un nuevo ciclo del modelo en espiral, y en la evaluaci\u00f3n se realizar\u00eda un sprint</p>"},{"location":"EDD/act_6/","title":"Conflicto de intereses (scrum)","text":"<p>En una reuni\u00f3 de revisi\u00f3 de sprint hem tingut alguns problemes amb determinades tasques que no s'han dut a terme correctament o no s'han acabat a temps. En la reuni\u00f3 de planificaci\u00f3 inicial, el Scrum Master ja va suggerir que determinats equips estaven sobrecarregats de treball, per\u00f2 el Product Owner va insistir que hi havia tasques que el client esperava veure prompte fetes. Qu\u00e8 creieu que ha passat?  </p> <p>Parece que en el sprint planning el product owner y el scrum master no llegaron a una conclusi\u00f3n correcta sobre la cantidad de tareas a realizar, haciendo que no sea posible realizarlas a tiempo durante el sprint. Esto deber\u00edan haberlo corregido haciendo los daily scrum y corrigiendo la planificaci\u00f3n del sprint.</p>"},{"location":"EDD/actividad_calculadora/","title":"Actividad calculadora","text":""},{"location":"EDD/actividad_calculadora/#estructura","title":"Estructura","text":""},{"location":"EDD/actividad_calculadora/#funciones-calcular","title":"Funciones (calcular)","text":"<pre><code>package com.andreu.edd;  \npublic class calcular {  \n    public static void sumar(int a, int b) {  \n        System.out.println(\"Sumar:\");  \n        System.out.println(a + b);  \n    }  \n    public static void restar(int a, int b) {  \n        System.out.println(\"Restar:\");  \n        System.out.println(a - b);  \n    }  \n    public static void multiplicar(int a, int b) {  \n        System.out.println(\"Multiplicar:\");  \n        System.out.println(a * b);  \n    }  \n    public static void dividir(int a, int b) {  \n        System.out.println(\"Dividir:\");  \n        System.out.println(a / b);  \n    }  \n}  \n</code></pre>"},{"location":"EDD/actividad_calculadora/#clase-main-calculadora","title":"Clase main (calculadora)","text":"<pre><code>\npackage com.andreu.edd;\n\npublic class calculadora {\n    public static void main(String[] args) {\n        int num1 = 1, num2 = 2;\n        calcular.sumar(num1, num2);\n        calcular.restar(num1, num2);\n        calcular.multiplicar(num1, num2);\n        calcular.dividir(num1, num2);\n    }\n}\n</code></pre>"},{"location":"EDD/actividad_calculadora/#obtener-y-ejectar-class","title":"Obtener y ejectar .class","text":"<p>PS C:\\Users\\andre\\Documents\\Insti\\java&gt; javac -d build -classpath build .\\src\\com\\andreu\\edd*  </p> <p>Con la opcion \"-d\"  decimos el directorio donde queremos que se guarden los .class (archivos compilados). Y la opcion \"--classpath\" especificamos donde estan guardadas las clases a utilizar.</p> <p>PS C:\\Users\\andre\\Documents\\Insti\\java&gt; java -cp build com.andreu.edd.calculadora  </p>"},{"location":"EDD/actividad_calculadora/#resultado","title":"Resultado","text":"<p>Sumar: 3 Restar: -1 Multiplicar: 2 Dividir: 0  </p>"},{"location":"EDD/actividad_calculadora/#java-con-ant","title":"Java con Ant","text":"<p>Nos descargamos e instalamos Java con Ant desde la  pagina oficial de Ant. Nos instalamos el extension \"Ant Target Runner\" para poder utilizarlo de buena forma en Visual Studio Code. Generamos el archivo build.xml:</p> <pre><code>&lt;project name=\"calculadora\"&gt;\n    &lt;target name=\"clean\"&gt;\n        &lt;delete dir=\"build\" /&gt;\n    &lt;/target&gt;\n\n    &lt;target name=\"compile\" depends=\"clean\"&gt;\n        &lt;mkdir dir=\"build\" /&gt;\n        &lt;javac includeantruntime=\"false\" \n        srcdir=\"src/com/andreu/edd\" destdir=\"build\" /&gt;\n    &lt;/target&gt;\n\n    &lt;target name=\"run\" depends=\"compile\"&gt;\n        &lt;property name=\"arg0\" value=\"\"/&gt;\n        &lt;java classpath=\"build\" classname=\"com.andreu.edd.calculadora\"&gt;\n            &lt;arg value=\"${arg0}\"/&gt;\n        &lt;/java&gt;\n    &lt;/target&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"EDD/actividad_calculadora/#compilar","title":"Compilar","text":"<p>ant compile</p> <p></p>"},{"location":"EDD/actividad_calculadora/#limpiar-los-class","title":"Limpiar los .class","text":"<p>ant clean</p> <p></p>"},{"location":"EDD/actividad_calculadora/#ejecutar","title":"Ejecutar","text":"<p>ant run</p> <p></p>"},{"location":"EDD/actividad_maven/","title":"Java con Maven","text":"<p>Vamos a crear un proyecto con Maven en terminal, en visual studio y con netbeans.</p>"},{"location":"EDD/actividad_maven/#instalacion","title":"Instalacion","text":"<p>Para instalar Java con Maven, nos vamos a su pagina oficial y nos descargamos el binario del programa. tras esto, a\u00f1adimos la ruta al /bin del programa al $PATH. Con esto, ya podremos utilizar Maven donde queramos.</p>"},{"location":"EDD/actividad_maven/#por-terminal","title":"Por terminal","text":"<p>Generamos el proyecto con el siguiente comando con la plantilla de un \"Hola Mundo!\"</p> <p>mvn archetype:generate -DgroupId=com.bifante.grau.andreu -DartifactId=saludaMaven -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.5 -DinteractiveMode=false</p> <p></p>"},{"location":"EDD/actividad_maven/#compilar","title":"Compilar","text":"<p>Pasamos los ficheros java de la calculadora y sus funciones y le cambiamos el package por:</p> <p>package com.bifante.grau.andreu;  </p> <p>Cuando ya tengamos el programa hecho, en este caso la calculadora, lo ponemos en los directorios /main y /test le damos a:  </p> <p>mvn compile   </p> <p></p>"},{"location":"EDD/actividad_maven/#ejecutar","title":"Ejecutar","text":""},{"location":"EDD/actividad_maven/#limpiar-proyecto","title":"Limpiar proyecto","text":"<p>mvn clean</p>"},{"location":"EDD/actividad_maven/#empaquetar","title":"Empaquetar","text":"<p>Antes de crear el JAR tenemos que cambiar el pom.xml para especificar la clase principal de la aplicacion.</p> <p></p> <p>Desde ahi, ya se podr\u00e1 empaquetar sin problemas.</p> <p></p>"},{"location":"EDD/actividad_maven/#ejecutar-jar","title":"Ejecutar JAR","text":""},{"location":"EDD/actividad_maven/#por-visual-studio-code","title":"Por Visual Studio Code","text":"<p>Instalamos la extension \"Maven for Java\" y creamos el proyecto.</p> <p></p> <p></p> <p>Desde aqui, es todo igual en cuanto a compilar y empaquetar. Utilizamos los comandos y la configuracion del pom.xml.</p>"},{"location":"EDD/actividad_maven/#netbeans","title":"NetBeans","text":"<p>En NetBeans es muy sencillo, simplemente le damos a crear nuevo proyecto y le damos a \"Java with Maven\".</p> <p></p> <p>Tras esto, hacemos la calculadora y cuando queramos compilarlo le damos click derecho al proyecto y le damos a \"Build and clean\" tras esto, te dar\u00e1n los .class y el JAR en la carpeta \"tarjet\".</p>"},{"location":"EDD/guia_git/","title":"Git","text":""},{"location":"EDD/guia_git/#guia-de-instalacion-y-uso-de-git","title":"Guia de instalacion y uso de git","text":""},{"location":"EDD/guia_git/#inicializar-repositorio-git","title":"Inicializar repositorio git","text":"<p>git init</p> <p>Cambios: Se crea carpeta .git</p>"},{"location":"EDD/guia_git/#ver-estado-del-git","title":"Ver estado del git","text":"<p>git status</p>"},{"location":"EDD/guia_git/#anadir-ficheros","title":"A\u00f1adir ficheros","text":"<p>git add .</p> <p>Cambios : los ficheros pasan de \"untracked\" a \"staged\"</p>"},{"location":"EDD/guia_git/#guardar-los-cambios-commit","title":"Guardar los cambios (commit)","text":"<p>git commit -m \"Mensaje\"</p> <p>Cambios: Se guardan los ficheros en el repositorio</p>"},{"location":"EDD/guia_git/#configurar-datos-proyecto","title":"Configurar datos proyecto","text":"<p>git config --global user.name \"Andreu\"  </p> <p>git config --global user.email \"andreueljust@gmail.com\"</p>"},{"location":"EDD/guia_git/#eliminar-ficheros","title":"Eliminar ficheros","text":"<p>rm fichero git add . // git rm</p> <p>git restore  </p>"},{"location":"EDD/guia_git/#ejercicio-1","title":"Ejercicio 1","text":"<p>Prueba a modificar un archivo y ver que pasa</p> <p>Si lo modificamos se pone en modo \"modified\" y lo podremos a\u00f1adir al prepositorio con un <code>git commit -m</code></p> <p>Que hace la opcion -a del git commit? </p> <p>Con esta opcion podemos hacer un commit a\u00f1adiendo todos los documentos automaticamente como si hicieramos un <code>git add .</code></p>"},{"location":"EDD/guia_git/#ejercicio-2","title":"Ejercicio 2","text":"<p>touch tmp1.md tmp2.md 1. Primero estan <code>untracked</code> git add . 2. Luego pasan a estar <code>staged</code> git commit -m \"Mensaje\" 3. Finalmente pasan a estar <code>tracked</code></p>"},{"location":"EDD/guia_git/#ejercicio-3","title":"Ejercicio 3","text":"<p>Creamos un fichero .gitignore con el siguiente contenido:</p> <p>.class -&gt; Le estamos diciendo que ignore todos los ficheros con la extension .class*</p> <p>Compilamos y haemos un <code>git add .</code> y nos dir\u00e1 que se ignorar\u00e1 el fichero .class y que podemos usar la opcion -f para a\u00f1adir los archivos sin tener en cuenta el .gitignore.</p>"},{"location":"EDD/guia_git/#log","title":"Log","text":""},{"location":"EDD/RSC/act1/","title":"Actividad 1 - Desarrollo colaborativo","text":"<p>Yo en este caso utilizaria subversion ya que, con este, podemos dividir el proyecto en diferentes ramas, asi cada uno tendr\u00eda su rama para trabajar en sus funcionalidades, pero tendrian otra con el codigo fuente sobre el que trabajar.  Para hacerlo, tendr\u00edan que seguir los siguientes pasos: 1. Registrarse en SourceForge y crearse un repositorio 2. Instalar subversion</p> <p>sudo apt install subversion 3. Conectarse al repositorio (cada  vez que quieran entrar) svn checkout --username=usuario Repositorio Directorio  4. A\u00f1adir carpetas mkdir trunk branches tags  </p> <p>svn add trunk branches tags  </p> <ol> <li>A\u00f1adir contenido al proyecto <p>svn add trunk/fichero -&gt; A\u00f1adir a la rama principal  </p> </li> </ol> <p>svn add branches/rama/fichero -&gt; A\u00f1adir el fichero a otra rama</p> <p>svn ci -m \"Mensaje\" -&gt; Subir los cambios al repositorio</p> <ol> <li>Actualizar antes de trabajar en el repositorio <p>svn up -&gt; Para tener la \u00faltima version del repositorio</p> </li> </ol>"},{"location":"EDD/RSC/act2/","title":"Actividad 2 - Control de versiones y modo iterativo","text":"<p>Yo crear\u00eda una rama para cada fase. Por ejemplo:</p> <ul> <li>branches<ul> <li>fase-1</li> <li>fase-2</li> <li>fase-3</li> <li>fase-4</li> <li>fase-5</li> </ul> </li> </ul> <p>Al realizar cada fase se haria una fusion del archivo de la rama principal con el de la fase actual.</p> <p>svn merge /repositorio/branches/fase-n /ruta/trunk  </p> <p>svn commit -m \"Fusi\u00f3n de la fase-n a trunk\"</p>"},{"location":"EDD/RSC/act3/","title":"Actividad 3","text":""},{"location":"EDD/RSC/act3/#rsc","title":"RSC","text":"<ul> <li>co = bloquea el fichero del proyecto para que nadie mas trabaje con \u00e9l mientras lo haces t\u00fa.</li> <li>ci = guardar los cambios hechos en el fichero</li> </ul>"},{"location":"EDD/RSC/act3/#svn","title":"SVN","text":"<ul> <li>svn co = conectarse al repositorio</li> <li>svn ci = guardar los cambios de los archivos a\u00f1adidos con <code>svn add</code></li> <li>svn st = muestra el estado del repositorio</li> <li>svn add = a\u00f1adir los ficheros a los cambios en el repositorio</li> <li>svn up = actualizar tu repositorio local con el que este en linea.</li> </ul>"},{"location":"EDD/RSC/act3/#diferencias","title":"Diferencias","text":"<ul> <li>co<ul> <li>rcs = bloquear el fichero para hacer cambios</li> <li>svn = conectarse al repositorio</li> </ul> </li> <li>ci<ul> <li>rcs = subir los archivos modificados</li> <li>svn = subir los archivos modificados a\u00f1adidos al commit</li> </ul> </li> </ul>"},{"location":"LMI/act_1/","title":"Caracteristicas de los lenguajes de marcas","text":"<p>Intenta identificar alguns exemples de les caracter\u00edstiques comentades anteriorment en els documents que se t'han proporcionat.</p>"},{"location":"LMI/act_1/#documento-en-texto-plano","title":"Documento en texto plano","text":"<p>Por ejemplo logo.svg esta hecho en texto plano, por lo que podemos editar el logo desde el bloc de notas. </p>"},{"location":"LMI/act_1/#marcas-insertadas-en-el-contenido","title":"Marcas insertadas en el contenido","text":"<p>En llenguatges.html se usan encabezados <code>&lt;h2&gt;</code> y p\u00e1rrafos <code>&lt;p&gt;</code> para darle estructura al texto. </p>"},{"location":"LMI/act_1/#componentes-sencillos-y-intuitivos","title":"Componentes sencillos y intuitivos","text":"<p>En llenguatges.html se utiliza la etiqueta <code>&lt;b&gt;</code> (que viene de la palabra \"bold\") para poner en negrita una parte del texto y darle formato a este. </p>"},{"location":"LMI/act_1/#versatilidad-y-ambito-de-utilizacion-extenso","title":"Versatilidad y \u00e1mbito de utilizaci\u00f3n extenso","text":"<ul> <li>llenguatges.html = p\u00e1gina web  </li> <li>logo.svg = gr\u00e1fico </li> </ul>"},{"location":"LMI/act_1/#etiquetas-identificativas-del-tipo-de-contenido","title":"Etiquetas identificativas del tipo de contenido","text":"<p>Por ejemplo en llenguatges.html se utiliza la etiqueta <code>&lt;body&gt;</code> para mostrar cual es la parte visible del archivo en la cual a\u00f1adir en el contenido a mostrar.</p>"},{"location":"LMI/act_2/","title":"Espacio de nombres","text":"<p>Revisa el fitxer AndroidManifest.xml i intenta identificar algun espai de noms.  </p> <p>Los espacios de nombre de este archivo se definen con <code>&lt;manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" package=\"com.example.myapp\"&gt;</code> en el apartado de <code>xmlns:android=</code>. Utiliza ese enlace para definir los espacios de nombre.</p> <p>Las etiquetas <code>&lt;uses-permision&gt;</code>, <code>&lt;application&gt;</code>, <code>&lt;activity&gt;</code>, <code>&lt;action&gt;</code>, <code>&lt;category&gt;</code> utilizan espacios de nombre: - <code>android:name</code> para establecer una clase - <code>android:allowBackup</code> para decir si permite las copias de seguridad - <code>android:icon</code> cual es el icono - <code>android:label</code> define el nombre de la app en el icono - <code>android:roundIcon</code> establece el icono pero redondeado - <code>android:supportsRtl</code> para ver si soporta rtl - <code>android:theme</code> para establecer el tema  </p>"}]}